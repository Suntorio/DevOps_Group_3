
# Service Definition for MongoDB
apiVersion: v1
kind: Service
metadata:
  name: mongo
  namespace: pacman
  labels:
    app: mongo
spec:
  ports:
    - port: 27017
      targetPort: 27017
  selector:
    app: mongo
  clusterIP: None # Headless service for StatefulSet
  type: ClusterIP

---

# ConfigMap with MongoDB Initialization Script
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-init-script
  namespace: pacman
data:
  setup.sh: |
    #!/bin/bash
    set -e

    mongo -- "$MONGO_INITDB_DATABASE" <<EOF
        db.createUser({user: "pacman", pwd: "pacman", roles: [{role: "readWrite", db: "admin" }]});
        use pacman;
        db.createCollection("init");
        db.init.insert({name: "init"});
        db.init.find();
        db.createUser({user: "pacman", pwd: "pacman", roles: [{role: "readWrite", db: "pacman" }]});
    EOF

---

# StatefulSet Definition for MongoDB
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
  namespace: pacman
spec:
  serviceName: "mongo"
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
        - name: mongo
          image: mongo:4.4.0
          ports:
            - name: mongo
              containerPort: 27017
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
            - name: mongo-initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mongo-initdb
          configMap:
            name: mongo-init-script
        - name: mongo-data
          persistentVolumeClaim:
            claimName: mongo-data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: local-pv
  storageClassName: ""

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: local-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/home/axelp/personal/DevOps/lessons/k8s/example_packman/minikube-local-k8s-cluster-deploy/mongo-data"  # Update this path based on your Minikube mount
  persistentVolumeReclaimPolicy: Retain
  storageClassName: ""
